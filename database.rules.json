{
  "rules": {
    ".read": "auth != null",
    ".write": "auth != null",
    
    "users": {
      "$uid": {
        ".read": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'",
        ".write": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'",
        ".validate": "newData.hasChildren(['name', 'email', 'createdAt'])",
        "role": {
          ".validate": "newData.val() === 'user' || newData.val() === 'admin'"
        }
      },
      ".indexOn": ["email", "role"]
    },
    
    "userDocuments": {
      "$docId": {
        ".read": "auth != null && (data.child('walletAddress').val() === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        ".write": "auth != null && (data.child('walletAddress').val() === auth.uid || !data.exists() || root.child('users').child(auth.uid).child('role').val() === 'admin')"
      },
      ".indexOn": ["walletAddress", "panNumber", "service"]
    },
    
    "test": {
      ".read": true,
      ".write": "auth != null"
    }
  }
} 